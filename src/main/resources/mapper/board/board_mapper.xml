<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toast.board.dao.BoardDAO">

	<!-- 게시글 작성할 때, 필요한 개인 정보들을 가져온다. (사원번호, 부서번호) -->
	<!-- 발령정보에서 가져와야 하는데, 인사 이동이 있을 시 여러개의 값이 있을 수 있다. 가장 최신걸 가져오는 쿼리 필요. -->
	<select id="memberInfo" parameterType="String" resultType="map">
		SELECT a.appo_empl_idx, a.dept_idx
		FROM employee e
		JOIN appointment a ON e.empl_idx = a.appo_empl_idx
		WHERE e.empl_id = #{id}
		ORDER BY appo_idx DESC
		LIMIT 1
	</select>

	<insert id="boardWrite" parameterType="map">
		INSERT INTO board(board_empl_idx, board_type_idx, dept_idx, board_title, board_content, file_key)
			VALUES(#{appo_empl_idx}, #{board_type_idx}, #{dept_idx}, #{board_title}, #{board_content}, #{file_key})
	</insert>
	
	<insert id="saveFile" parameterType="map">
		INSERT INTO file(file_key, uploader_idx, ori_filename, new_filename, file_type, file_addr)
			VALUES(#{file_key}, #{uploader_idx}, #{ori_filename}, #{new_filename}, #{file_type}, #{file_addr})
	</insert>
	
	<select id="boardList" resultType="map">
		SELECT b.board_idx, b.board_empl_idx, b.board_type_idx, b.dept_idx, b.board_title, b.board_content, b.board_view_cnt, b.board_write_date, b.board_update_date, 
		e.empl_name, e.empl_id, d.dept_name, bt.board_type_name 
		FROM board b 
		JOIN employee e ON b.board_empl_idx = e.empl_idx 
		JOIN department d ON b.dept_idx = d.dept_idx 
		JOIN board_type bt ON b.board_type_idx = bt.board_type_idx 
		WHERE 1 = 1
		<if test="dept != null and dept != ''"> 
			AND b.dept_idx = #{dept} </if>
		<if test="type != null and type != ''"> 
			AND bt.board_type_idx = #{type} </if>
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''"> 
			AND ${searchType} LIKE CONCAT('%', #{keyword}, '%') </if>
			ORDER BY b.board_write_date DESC 
			LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="countBoardList" resultType="map">
		SELECT CEIL(COUNT(*) / COALESCE(#{cnt}, 15)) AS pages
		<!--  cnt가 null일 경우 15로 처리  -->
		FROM board b 
		JOIN employee e ON b.board_empl_idx = e.empl_idx 
		JOIN department d ON b.dept_idx = d.dept_idx 
		JOIN board_type bt ON b.board_type_idx = bt.board_type_idx 
		WHERE 1 = 1
		<if test="dept != null and dept != ''"> 
			AND b.dept_idx = #{dept} </if>
		<if test="type != null and type != ''"> 
			AND bt.board_type_idx = #{type} </if>
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''"> 
			AND ${searchType} LIKE CONCAT('%', #{keyword}, '%') </if>
	</select>
	
	<!--  게시글 ID로 게시글을 조회하는 쿼리  -->
	<select id="getBoardByIdx" parameterType="int" resultType="map"> 
		SELECT b.board_idx, b.board_empl_idx, b.board_type_idx, b.dept_idx, b.board_title, b.board_content, b.board_view_cnt, b.board_write_date, b.board_update_date, 
		e.empl_name, e.empl_id, d.dept_name, bt.board_type_name 
		FROM board b 
		JOIN employee e ON b.board_empl_idx = e.empl_idx 
		JOIN department d ON b.dept_idx = d.dept_idx 
		JOIN board_type bt ON b.board_type_idx = bt.board_type_idx 
		WHERE b.board_idx = #{board_idx} 
	</select>
	
	<select id="getReplyList" parameterType="int" resultType="map"> 
		SELECT r.board_idx, r.reply_empl_idx, r.reply_content, r.reply_write_date, r.reply_update_date, e.empl_name 
		FROM reply r 
		JOIN employee e ON r.reply_empl_idx = e.empl_idx
		JOIN board b ON r.board_idx = b.board_idx 
		WHERE b.board_idx = #{board_idx} 
		ORDER BY reply_write_date DESC 
	</select>
	
	<insert id="writeReply" parameterType="map"> 
		INSERT INTO reply (board_idx, reply_empl_idx, reply_content) 
		VALUES (#{board_idx}, #{param1}, #{reply}) 
	</insert>
	
	<insert id="writeReReply" parameterType="map"> 
		INSERT INTO reply (parent_comment_id, reply_content, reply_write_date) 
		VALUES (#{parentCommentId}, #{replyContent}, NOW()) 
	</insert>
	
</mapper>