<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toast.approval.dao.ApprovalRequestDAO">

    <!--미리보기로 양식 선택 후 최초 저장-->
    <insert id="doc_write_initial" useGeneratedKeys="true" keyColumn="doc_idx" keyProperty="doc_idx" parameterType="com.toast.approval.dto.ApprovalRequestDTO">
        INSERT INTO document(doc_empl_idx,doc_content,form_idx,doc_state)
        VALUES(#{doc_empl_idx},#{doc_content},#{form_idx},0)
    </insert>


    <!--form_idx 기반으로 저장된 g_approval_line 가져오기-->
    <select id="get_g_approval_line" resultType="Map">
        SELECT * FROM g_approval_line WHERE form_idx = #{form_idx};
    </select>

    <!--결재자의 이름 가져오기-->
    <select id="get_approval_empl_idx" resultType="Map">
        SELECT e.empl_idx,a.position_idx from employee e join appointment a on e.appolast_idx = a.appo_idx
            where a.dept_idx = #{dept_idx} AND a.duty_idx = (SELECT duty_idx FROM g_approval_line WHERE form_idx = #{form_idx} AND gline_order = #{step})
    </select>

    <!--사장 부서 idx 가져오기-->
    <select id="get_head_dept_idx" resultType="int">
        SELECT a.dept_idx,a.position_idx from employee e join appointment a on e.appolast_idx = a.appo_idx
        WHERE a.duty_idx = 2;
    </select>

    <!--결재 라인 최초 저장-->
    <insert id="save_approval_line_initial" parameterType="Map">
        INSERT INTO approval_line (doc_idx,line_order,dept_idx,duty_idx,empl_idx,position_idx)
            VALUES (#{doc_idx},#{gline_order},#{dept_idx},#{duty_idx},#{empl_idx},#{position_idx})
    </insert>

    <!--1차 저장한 문서 가져오기-->
    <select id="doc_get" resultType="Map">
        SELECT doc_idx,doc_empl_idx,
        <if test="doc_subject!=''">doc_subject,</if>
        <if test="doc_content!=''">doc_content,</if>
        <if test="doc_content_sub!=''">doc_content_sub,</if>
        <if test="form_idx!=''">form_idx,</if>
        <if test="doc_subject!=''">doc_subject</if>
        FROM document WHERE doc_idx = #{doc_idx}
    </select>

    <!--결재 양식 채우기 위한 데이터 조회 쿼리-->
    <select id="doc_empl_name" resultType="String">
        SELECT empl_name FROM employee WHERE empl_idx = ${empl_idx}
    </select>


    <select id="doc_dept_idx" resultType="int">
        SELECT a.dept_idx from employee e join appointment a on e.appolast_idx = a.appo_idx
        WHERE a.appo_empl_idx = #{empl_idx};
    </select>


    <!--1차 저장한 결재라인 가져오기-->
    <select id="doc_line_get" resultType="Map">
      SELECT dp.dept_idx,dp.dept_name,al.line_order,e.empl_idx,e.empl_name,a.duty_idx,d.duty_name,a.position_idx,p.position_name FROM employee e
            JOIN appointment a on e.appolast_idx = a.appo_idx
            JOIN approval_line al on al.empl_idx = e.empl_idx
           JOIN duty d on d.duty_idx = a.duty_idx
           JOIN position_ p on p.position_idx  =  a.position_idx
           JOIN department dp on a.dept_idx = dp.dept_idx
        WHERE doc_idx = #{doc_idx}
    </select>


    <!--문서 작성 -->
    <update id="doc_write" parameterType="Map">
        UPDATE document
        <set>
        <if test="doc_end_date != ''">doc_end_date = #{doc_end_date},</if>
        <if test="doc_subject != ''">doc_subject = #{doc_subject},</if>
        <if test="doc_content_sub!= ''"> doc_content_sub = #{doc_content_sub},</if>
        <if test="doc_content!= ''">doc_content = #{doc_content},</if>
        <if test="doc_write_date!= ''">doc_write_date=#{doc_write_date},</if>
        <if test="doc_write_date!= ''">doc_update_date = #{doc_write_date}</if>
        </set>
        WHERE doc_idx = #{doc_idx}
    </update>

    <!--결재선 저장-->
    <update id="save_approval_line" parameterType="Map">
        UPDATE approval_line SET
            dept_idx = #{dept_idx},duty_idx = #{duty_idx}, empl_idx = #{empl_idx}
        WHERE doc_idx = #{doc_idx} AND line_order = #{line_order}
    </update>

    <insert id="approval_doc_file_write">
        INSERT INTO file (uploader_idx,file_key,ori_filename, new_filename,file_type,file_addr)
        VALUES(#{empl_idx},#{file_key},#{ori_filename},#{new_filename},#{file_type},#{file_addr})
    </insert>

    <!--document의 file_key update-->
    <update id="doc_write_file_key">
        UPDATE document SET file_key = #{file_key} WHERE doc_idx = #{doc_idx}
    </update>

    <!--저장된 파일키 있는지 확인-->
    <select id="doc_saved_filekey_count" resultType="int">
        SELECT count(file_key) FROM document WHERE doc_idx = #{doc_idx}
    </select>

    <!--저장된 파일키 가져오기-->
    <select id="doc_saved_filekey" resultType="String">
        SELECT file_key FROM document WHERE doc_idx = #{doc_idx}
    </select>

    <!--이전 파일의 path를 가져오기-->

    <select id="get_previous_file_addr" resultType="Map">
        SELECT file_addr FROM file WHERE file_key = #{prev_file_key}
    </select>


    <!--이전 파일들 DB에서 삭제하기-->
    <delete id="delete_previous_files">
        DELETE FROM file WHERE file_key = #{previous_filekey}
    </delete>
    
    
    <!--파일 있었는데 수정 후 없어진 경우 doc_file_key 없애주는 쿼리-->
    <update id="doc_filekey_delete">
        UPDATE document SET file_key = null WHERE doc_idx = #{doc_idx}
    </update>
</mapper>