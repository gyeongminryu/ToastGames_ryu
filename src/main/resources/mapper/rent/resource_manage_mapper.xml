<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toast.rent.dao.ResourceManageDAO">

	<!-- 사원정보 가져오기 -->
	<select id="getEmplMg" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			ap.dept_idx,
			empl.empl_idx
		FROM 
			appointment AS ap
		JOIN 
			employee AS empl ON ap.appo_idx = empl.appolast_idx
		WHERE 
			empl.empl_id = #{param1}
	</select>

	<!-- 카테고리 목록 가져오기 -->
	<select id="resourceCateMg" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT prod_cate_idx, prod_cate_name, prod_life FROM product_category
	</select>

	<!-- 카테고리 검색 -->
	<select id="categroySearch" resultType="map">
		SELECT prod_cate_idx,prod_cate_name FROM product_category 
			WHERE prod_cate_name LIKE CONCAT('%', #{param1}, '%')
		 
	</select>

	<!-- 총 페이지 -->
	<select id="allCount" resultType="int">
		SELECT CEIL(COUNT(prod_idx)/#{param1}) AS pages 
		FROM 
			product
		WHERE  
    		prod_state=1
	</select>

	<!-- 물품 목록 가져오기 --><!-- 페이징 포함 -->
	<select id="resourceList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name, 
			pd.prod_cate_idx, 
			pd.prod_model,
			pd.prod_info,
			pd.prod_rent, 
			pd.prod_empl_idx, 
			pd.prod_dispo_date, 
			pd.prod_state,
			pc.prod_cate_name,
			pr.prod_exp_date
		FROM 
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		LEFT JOIN 
			(
        		SELECT 
            		pr.prod_idx,
            		pr.prod_exp_date,
            		pr.prod_rent_idx
        		FROM 
            		product_rent pr
        		WHERE 
            		pr.prod_rent_idx = (
                		SELECT MAX(prod_rent_idx) 
                		FROM product_rent 
                		WHERE prod_idx = pr.prod_idx
            		)
    		) pr ON pr.prod_idx = pd.prod_idx
		ORDER BY prod_idx DESC 
			LIMIT #{param1} OFFSET #{param2}		
	</select>


	<!-- 카테고리별 총 페이지 -->
	<select id="filterListCount" resultType="int">
		SELECT CEIL(COUNT(prod_idx)/#{param1}) AS pages 
		FROM 
			product 
		WHERE 
			prod_cate_idx=#{param2}
		AND 
    		prod_state=1
	</select>

	<!--카테고리별 물품 목록 가져오기 --><!-- 페이징 포함 -->
	<select id="resourceFilterList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name, 
			pd.prod_cate_idx, 
			pd.prod_model,
			pd.prod_info,
			pd.prod_rent, 
			pd.prod_empl_idx, 
			pd.prod_dispo_date, 
			pd.prod_state,
			pc.prod_cate_name,
			pr.prod_exp_date
		FROM 
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		LEFT JOIN 
			(
        		SELECT 
            		pr.prod_idx,
            		pr.prod_exp_date,
            		pr.prod_rent_idx
        		FROM 
            		product_rent pr
        		WHERE 
            		pr.prod_rent_idx = (
                		SELECT MAX(prod_rent_idx) 
                		FROM product_rent 
                		WHERE prod_idx = pr.prod_idx
            		)
    		) pr ON pr.prod_idx = pd.prod_idx
		WHERE 
			pd.prod_cate_idx=#{param1}
		ORDER BY prod_idx DESC 
			LIMIT #{param2} OFFSET #{param3}		
	</select>



	<!-- 카테고리 & 검색어 총 페이지 -->
	<select id="allSearchCount" 
		parameterType="map" 
		resultType="int">
		SELECT CEIL(COUNT(prod_idx)/#{cnt}) AS pages 
		FROM 
			product 
		WHERE 
			#{option} LIKE CONCAT('%', #{keyword}, '%')
		AND 
    		prod_state=#{prod_state}
	</select>

	<!--카테고리 & 검색어 물품 목록 가져오기 --><!-- 페이징 포함 -->
	<select id="resourceSearchList" 
		parameterType="map" 
		resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name, 
			pd.prod_cate_idx, 
			pd.prod_model,
			pd.prod_info,
			pd.prod_rent, 
			pd.prod_empl_idx, 
			pd.prod_dispo_date, 
			pd.prod_state,
			pc.prod_cate_name,
			pr.prod_exp_date
		FROM 
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		LEFT JOIN 
						(
        		SELECT 
            		pr.prod_idx,
            		pr.prod_exp_date,
            		pr.prod_rent_idx
        		FROM 
            		product_rent pr
        		WHERE 
            		pr.prod_rent_idx = (
                		SELECT MAX(prod_rent_idx) 
                		FROM product_rent 
                		WHERE prod_idx = pr.prod_idx
            		)
    		) pr ON pr.prod_idx = pd.prod_idx
		WHERE 
		<choose>
        	<when test="option == 'prod_name'">
            	pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
        	</when>
        	<when test="option == 'prod_info'">
            	pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
        	</when>
        	<otherwise>
            	1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
        	</otherwise>
    	</choose>
    	AND 
    		pd.prod_state=#{prod_state}
		ORDER BY prod_idx DESC 
			LIMIT #{limit} OFFSET #{offset}		
	</select>


	<!-- 카테고리선택 & 검색어 총 페이지 -->
	<select id="filterSearchCount" 
		parameterType="map" 
		resultType="int">
		SELECT CEIL(COUNT(prod_idx)/#{cnt}) AS pages 
		FROM 
			product 
		WHERE 
			#{option} LIKE CONCAT('%', #{keyword}, '%')
		AND 
			prod_cate_idx=#{category}
		AND 
    		prod_state=#{prod_state}
	</select>

	<!--카테고리선택 & 검색어 물품 목록 가져오기 --><!-- 페이징 포함 -->
	<select id="filterSearchList" 
		parameterType="map" 
		resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name, 
			pd.prod_cate_idx, 
			pd.prod_model,
			pd.prod_info,
			pd.prod_rent, 
			pd.prod_empl_idx, 
			pd.prod_dispo_date, 
			pd.prod_state,
			pc.prod_cate_name,
			pr.prod_exp_date
		FROM 
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		LEFT JOIN 
						(
        		SELECT 
            		pr.prod_idx,
            		pr.prod_exp_date,
            		pr.prod_rent_idx
        		FROM 
            		product_rent pr
        		WHERE 
            		pr.prod_rent_idx = (
                		SELECT MAX(prod_rent_idx) 
                		FROM product_rent 
                		WHERE prod_idx = pr.prod_idx
            		)
    		) pr ON pr.prod_idx = pd.prod_idx
		WHERE 
		<choose>
        	<when test="option == 'prod_name'">
            	pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
        	</when>
        	<when test="option == 'prod_info'">
            	pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
        	</when>
        	<otherwise>
            	1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
        	</otherwise>
    	</choose>
    	AND 
    		pd.prod_cate_idx=#{category}
    	AND 
    		pd.prod_state=#{prod_state}
		ORDER BY prod_idx DESC 
			LIMIT #{limit} OFFSET #{offset}		
	</select>


	<!-- 물품 등록 -->
	<insert id="prodWrite"
		useGeneratedKeys="true"
		keyColumn="prod_idx"
		keyProperty="prod_idx"
		parameterType="com.toast.rent.dto.ResourceManageDTO">
		INSERT INTO product(prod_name, prod_model, prod_cate_idx, prod_info,prod_dispo_date, prod_rent, prod_state,prod_place,prod_purch_date, prod_empl_idx)
			VALUES(#{prod_name},#{prod_model}, #{prod_cate_idx}, #{prod_info},#{prod_dispo_date}, #{prod_rent}, #{prod_state},#{prod_place},#{prod_purch_date},#{prod_empl_idx})
	</insert>

    <!-- 물품 사진 등록 -->
	<insert id="prodFileAdd" parameterType="com.toast.rent.dto.ResourcePhotoDTO">
		INSERT INTO file(file_key, uploader_idx, ori_filename, new_filename, file_type, file_addr,file_size)
			VALUES(#{file_key}, #{uploader_idx}, #{ori_filename}, #{new_filename}, #{file_type}, #{file_addr},#{file_size})
	</insert>


    <!-- 물품 대여 기록 가져오기 -->
	<select id="prodMgDetail" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pr.prod_rent_idx,
			pr.prod_rent_empl_idx,
			pr.prod_rent_reason,
			pr.prod_rent_date,
			pr.prod_exp_date,
			pr.prod_return_date,
			pd.prod_idx,
			pd.prod_name,
			pd.prod_model,
			pd.prod_info,
			pd.prod_dispo_date,
			pd.prod_state,
			pd.prod_rent,
			pc.prod_cate_name,
			pc.prod_life,
			pd.prod_purch_date
		FROM 
			product pd
		LEFT JOIN
			product_rent pr ON pr.prod_idx=pd.prod_idx
		LEFT JOIN
			product_category pc ON pc.prod_cate_idx=pd.prod_cate_idx
		WHERE 
			pd.prod_idx=#{param1}	
		ORDER BY 
		    pr.prod_rent_idx DESC
		LIMIT 1;	
	</select>

	<!-- 대여 사원 정보 -->
	<select id="rentEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			empl.appolast_idx,
			dept.dept_name,
			pos.position_name,
			du.duty_name
		FROM
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx	
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		WHERE 
			empl.empl_idx=#{param1}
	</select>

	<!-- 물품  첨부파일 가져오기-->
	<select id="prodMgFile" resultType="com.toast.rent.dto.ResourcePhotoDTO">
		SELECT 		
			file_idx, file_key, ori_filename, new_filename, file_type, file_addr, uploader_idx,file_size
		FROM 
			file
		WHERE file_key=#{param1}
	</select>

    <!-- 대여기록 총페이지 -->
	<select id="allHisCount">
		SELECT CEIL(COUNT(prod_idx)/#{param1}) AS pages 
		FROM 
			product_rent
		WHERE 
			prod_idx=#{param2}
	</select>

	<!-- 대여기록 페이징 -->
	<select id="rentManageList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pr.prod_rent_idx,
			pr.prod_rent_reason,
			pr.prod_rent_date,
			pr.prod_exp_date,
			pr.prod_return_date, 
			empl.empl_idx,
			empl.empl_name,
			empl.appolast_idx,
			dept.dept_name,
			pos.position_name,
			du.duty_name
		FROM
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx	
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		JOIN 
			product_rent pr ON pr.prod_rent_empl_idx=empl.empl_idx
		WHERE 
			pr.prod_idx=#{param3}
		ORDER BY prod_rent_idx DESC 
			LIMIT #{param1} OFFSET #{param2}	
	</select>

	<!-- 대여 승인 -->
	<update id="permitProd">
		UPDATE 
			product
		SET 
			prod_rent = 3
		WHERE 
			prod_idx = #{param1}
	</update>
	
	<!-- 대여 승인  상태 업뎃-->
	<update id="permitProdState">
		UPDATE 
			product_rent
		SET 
			prod_return_state = 0
		WHERE 
			prod_rent_idx = #{param1}
	</update>
	
	<!-- 반납일정 추가정보 가져오기 -->
	<select id="getReturnInfo">
		SELECT
			pd.prod_idx,
			pd.prod_name,
			pr.prod_rent_idx,
			pr.prod_exp_date,
			prod_rent_empl_idx
		FROM 
			product pd
		JOIN 
			product_rent pr ON pr.prod_idx=pd.prod_idx
		WHERE 
			pr.prod_rent_idx=#{param1}
	</select>
	
	<!-- 반납일정 추가schedule -->
	<insert id="insertReturnSchedule">
		INSERT INTO schedule(
			sche_title, 
			sche_content, 
			sche_type, 
			sche_start_date, 
			sche_end_date, 
			sche_allday, 
			sche_empl_idx, 
			sche_write_date)
			VALUES(
				#{sche_title},
				#{sche_content},
				#{sche_type},
				#{sche_start_date},
				#{sche_end_date},
				#{sche_allday},
				#{sche_empl_idx},
				#{sche_write_date})
	</insert>
	
	
	
	
	
	
	<!-- 반납예정일시 가져오기 -->
	<select id="getExpDate">
		SELECT prod_exp_date
		FROM product_rent
		WHERE prod_rent_idx=#{param1}
	</select>

	<!-- 반납 처리 -->
	<update id="permitReturn">
		UPDATE 
			product
		SET 
			prod_rent = 1
		WHERE 
			prod_idx = #{param1}
	</update>

	<!-- 반납일시 입력 -->
	<update id="insertReturnDate">
		UPDATE 
			product_rent
		SET
			prod_return_date=#{prod_return_date}, 
			prod_return_state=#{prod_return_state}
		WHERE 
			prod_rent_idx=#{prod_rent_idx}
	</update>

	<!-- 물품 정보가져오기 -->
	<select id="getProductinfo" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT
			pd.prod_idx,
			pd.prod_name,
			pd.prod_model,
			pd.prod_info,
			pd.prod_model,
			pd.prod_place,
			pd.prod_dispo_date,
			pd.prod_state,
			pc.prod_cate_idx,
			pc.prod_cate_name,
			pc.prod_life
		FROM
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		WHERE
			pd.prod_idx=#{param1}
	</select>

	<!-- 파일키 저장 -->
	<update id="prodFileKeyAdd">
		UPDATE product SET file_key=#{param1}
			WHERE prod_idx=#{param2}
	</update>


	<!-- 파일키 가져오기 -->
	<select id="getProdFileKey" resultType="String">
		SELECT file_key FROM product WHERE prod_idx=#{param1}
	</select>

	<!-- 물품 정보 수정 -->
	<update id="prodUpdate" parameterType="com.toast.rent.dto.ResourceManageDTO">
		UPDATE 
			product
		SET
			prod_name=#{prod_name},
			prod_model=#{prod_model},
			prod_info=#{prod_info},
			prod_cate_idx=#{prod_cate_idx},
			prod_state=#{prod_state},
			prod_place=#{prod_place}
		WHERE 
			prod_idx=#{prod_idx}
	</update>

	<!-- 물품 첨부파일 삭제 -->
	<delete id="prodFileRemove">
		DELETE FROM file 
			WHERE file_key=#{param1}
	</delete>

	<!-- 물품 파일키 삭제 -->
	<update id="prodFileKeyRemove">
	    UPDATE product
	    SET file_key = NULL
	    WHERE prod_idx = #{param1} AND file_key = #{param2}
	</update>

	<!-- 폐기할 물품 정보가져오기 -->
	<select id="prodInfo" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name,
			pd.prod_info,
			pd.prod_model,
			pc.prod_cate_name,
			pc.prod_life,
			pd.prod_purch_date,
			pd.prod_dispo_date,
			pd.prod_state
		FROM 
			product pd
		JOIN 
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		WHERE 
			pd.prod_idx=#{param1}
	</select>

	<!-- 물품 폐기처리 -->
	<insert id="prodDispo" parameterType="com.toast.rent.dto.ResourceManageDTO">
		INSERT INTO disposed_product(prod_idx,disp_state,disp_reason,disp_empl_idx,disp_date)
			VALUES(#{prod_idx},#{disp_state},#{disp_reason},#{disp_empl_idx},#{disp_date})
	</insert>

	<!--폐기 파일키 저장 -->
	<update id="dispFileKeyAdd">
		UPDATE disposed_product
		SET file_key=#{param1}
		WHERE prod_idx=#{param2}
	</update>
	
	<!-- 물품 사용 불가 처리 -->
	<update id="prodDispUpdate">
		UPDATE product
		SET 
			prod_state=#{param1},
			prod_rent=#{param2}
		WHERE prod_idx=#{param3}
	</update>

	<!-- 인수자 부서 가져오기 -->	
	<select id="getDeptList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			dept_idx,
			dept_name
		FROM
			department
	</select>

	<!-- 인수자 팀 정보 -->
	<select id="getTeamList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			team_idx,
			team_name
		FROM 
			project_team
	</select>
	
	<!-- 부서별 인수자 -->
	<select id="getDeptEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		WHERE 
			appo.dept_idx=#{param1}
	</select>
	
	<!-- 팀별 인수자 -->
	<select id="getTeamEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		JOIN
			team_members tm ON tm.teammem_empl_idx=empl.empl_idx
		WHERE 
			tm.team_idx=#{param1}
	</select>
	
	<!--팀장 인수자 -->
	<select id="getTeamHeadEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		JOIN
			project_team pt ON pt.team_head_idx=empl.empl_idx
		WHERE 
			pt.team_idx=#{param1}
	</select>

	<!-- 부서별 인수자 검색 -->
	<select id="takeDeptEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		WHERE 
			dept.dept_name LIKE CONCAT('%', #{param1}, '%')
	</select>

	<!-- 직급별 인수자 검색 -->
	<select id="takePosiEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		WHERE 
			pos.position_name LIKE CONCAT('%', #{param1}, '%')
	</select>
	
	<!-- 사원 인수자 검색 -->
	<select id="takeEmpl" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			empl.empl_idx,
			empl.empl_name,
			dept.dept_name,
			pos.position_name,
			du.duty_name,
			empl.empl_profile
		FROM 
			employee empl
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN 
			position_ pos ON pos.position_idx=appo.position_idx
		JOIN 
			duty du ON du.duty_idx=appo.duty_idx
		JOIN
			department dept ON dept.dept_idx=appo.dept_idx
		WHERE 
			empl.empl_name LIKE CONCAT('%', #{param1}, '%')
	</select>
	
	<!-- 인수인계 진짜 처리 -->
	<insert id="prodTransfer" parameterType="com.toast.rent.dto.ResourceManageDTO">
		INSERT INTO disposed_product(prod_idx,disp_state,take_empl_idx,disp_empl_idx,disp_date)
			VALUES(#{prod_idx},#{disp_state},#{take_empl_idx},#{disp_empl_idx},#{disp_date})
	</insert>
	
	<!-- 모든 폐기 총 페이지 -->
	<select id="allDispoCount" resultType="int">
		SELECT CEIL(COUNT(disp_prod_idx)/#{param1}) AS pages 
		FROM 
			disposed_product
	</select>
	
	<!-- 모든 폐기 목록 -->
	<select id="dispoList" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			dp.disp_prod_idx,
			dp.prod_idx,
			pc.prod_cate_name,
			pd.prod_name,
			pd.prod_model,
			pd.prod_purch_date,
			dp.disp_date,
			pd.prod_dispo_date,
			dp.disp_empl_idx,
			pos.position_name,
			empl.empl_idx,
			empl.empl_name
		FROM
			disposed_product dp
		JOIN
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		JOIN
			employee empl ON empl.empl_idx=dp.disp_empl_idx
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		ORDER BY disp_prod_idx DESC 
			LIMIT #{param1} OFFSET #{param2}	
	</select>
	
	<!-- 카테고리별 폐기 총 페이지 -->
	<select id="allCateDispoCount" parameterType="map" resultType="int">
		SELECT CEIL(COUNT(disp_prod_idx)/#{cnt}) AS pages 
		FROM 
			disposed_product dp
		JOIN 
		 	product pd ON dp.prod_idx=pd.prod_idx
		 JOIN 
		 	product_category pc ON pc.prod_cate_idx=pd.prod_cate_idx
		 WHERE pc.prod_cate_idx=#{category}
	</select>

	<!-- 카테고리별 폐기목록 -->
	<select id="dispoCateList" parameterType="map" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			dp.disp_prod_idx,
			dp.prod_idx,
			pc.prod_cate_name,
			pd.prod_name,
			pd.prod_model,
			pd.prod_purch_date,
			dp.disp_date,
			pd.prod_dispo_date,
			dp.disp_empl_idx,
			pos.position_name,
			empl.empl_idx,
			empl.empl_name
		FROM
			disposed_product dp
		JOIN
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		JOIN
			employee empl ON empl.empl_idx=dp.disp_empl_idx
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		WHERE pc.prod_cate_idx=#{category}
		ORDER BY disp_prod_idx DESC 
			LIMIT #{limit} OFFSET #{offset}	
	</select>
	
	<!-- 폐기 검색 전체 페이지 -->
	<select id="allSearchDispoCount" parameterType="map" resultType="int">
		SELECT CEIL(COUNT(disp_prod_idx)/#{cnt}) AS pages 
		FROM 
			disposed_product  dp
		JOIN 
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pc.prod_cate_idx=pd.prod_cate_idx
		WHERE
		<choose>
		    <when test="option == 'prod_name'">
		        pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_model'">
		        pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_cate_name'">
		        pc.prod_cate_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <otherwise>
		        1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
		    </otherwise>
		</choose>
	</select>
	
	
	<!-- 폐기 검색 전체 목록 -->
	<select id="dispoSearchList" parameterType="map" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			dp.disp_prod_idx,
			dp.prod_idx,
			pc.prod_cate_name,
			pd.prod_name,
			pd.prod_model,
			pd.prod_purch_date,
			dp.disp_date,
			pd.prod_dispo_date,
			dp.disp_empl_idx,
			pos.position_name,
			empl.empl_idx,
			empl.empl_name
		FROM
			disposed_product dp
		JOIN
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		JOIN
			employee empl ON empl.empl_idx=dp.disp_empl_idx
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		WHERE
		<choose>
		    <when test="option == 'prod_name'">
		        pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_model'">
		        pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_cate_name'">
		        pc.prod_cate_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <otherwise>
		        1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
		    </otherwise>
		</choose>
		ORDER BY disp_prod_idx DESC 
		LIMIT #{limit} OFFSET #{offset}	
	
	</select>
	
	
	<!-- 폐기 검색 카테고리 페이지 -->
	<select id="allCateSearchDispoCount" parameterType="map" resultType="int">
		SELECT CEIL(COUNT(disp_prod_idx)/#{cnt}) AS pages 
		FROM 
			disposed_product  dp
		JOIN 
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pc.prod_cate_idx=pd.prod_cate_idx
		WHERE
		<choose>
		    <when test="option == 'prod_name'">
		        pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_model'">
		        pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_cate_name'">
		        pc.prod_cate_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <otherwise>
		        1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
		    </otherwise>
		</choose>
		AND pd.prod_cate_idx = #{category}
	</select>
	
	
	
	<!-- 폐기 검색 카테고리 목록 -->
	<select id="dispoCateSearchList" parameterType="map" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			dp.disp_prod_idx,
			dp.prod_idx,
			pc.prod_cate_name,
			pd.prod_name,
			pd.prod_model,
			pd.prod_purch_date,
			dp.disp_date,
			pd.prod_dispo_date,
			dp.disp_empl_idx,
			pos.position_name,
			empl.empl_idx,
			empl.empl_name
		FROM
			disposed_product dp
		JOIN
			product pd ON dp.prod_idx=pd.prod_idx
		JOIN
			product_category pc ON pd.prod_cate_idx=pc.prod_cate_idx
		JOIN
			employee empl ON empl.empl_idx=dp.disp_empl_idx
		JOIN
			appointment appo ON empl.appolast_idx=appo.appo_idx
		JOIN
			position_ pos ON pos.position_idx=appo.position_idx
		WHERE
		<choose>
		    <when test="option == 'prod_name'">
		        pd.prod_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_model'">
		        pd.prod_info LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <when test="option == 'prod_cate_name'">
		        pc.prod_cate_name LIKE CONCAT('%', #{keyword}, '%')
		    </when>
		    <otherwise>
		        1 = 1 <!-- 조건이 없으면 모든 데이터를 반환 -->
		    </otherwise>
		</choose>
		WHERE pc.prod_cate_idx=#{category}
		ORDER BY disp_prod_idx DESC 
		LIMIT #{limit} OFFSET #{offset}	
	</select>
	
	<!-- 폐기 상세보기 -->
	<select id="dispDetail" resultType="com.toast.rent.dto.ResourceManageDTO">
		SELECT 
			pd.prod_idx,
			pd.prod_name,
			pd.prod_model,
			pd.prod_info,
			pc.prod_cate_name,
			pc.prod_life,
			pd.prod_purch_date,
			pd.prod_dispo_date,
			dp.disp_prod_idx,
			dp.disp_reason,
			dp.disp_empl_idx,
			dp.disp_date,
			dp.file_key
		FROM
			product pd
		JOIN 
			disposed_product dp ON dp.prod_idx=pd.prod_idx
		JOIN 
			product_category ON pc.prod_cate_idx=pd.prod_cate_idx
		WHERE 
			pd.prod_idx=#{param1}
	</select>
	
	<!-- 폐기 파일 -->
	<select id="dispFiles" resultType="com.toast.rent.dto.ResourcePhotoDTO">
		SELECT 
			file_addr,
			new_filename
		FROM 
			file
		WHERE file_key=#{param1}
	</select>
	
	
	
	
	
	
</mapper>